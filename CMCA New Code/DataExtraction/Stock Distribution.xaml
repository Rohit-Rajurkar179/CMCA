<Activity mc:Ignorable="sap sap2010" x:Class="Stock_Distribution" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FundName" Type="InArgument(x:String)" />
    <x:Property Name="in_FileData" Type="InArgument(x:String)" />
    <x:Property Name="out_InvestmentDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_EntityName" Type="OutArgument(x:String)" />
    <x:Property Name="out_SecurityDescription" Type="OutArgument(x:String)" />
    <x:Property Name="out_SharesNo" Type="OutArgument(x:String)" />
    <x:Property Name="out_PriceOnDistribution" Type="OutArgument(x:String)" />
    <x:Property Name="out_ReturnOfPrincipal" Type="OutArgument(x:String)" />
    <x:Property Name="out_GainLoss" Type="OutArgument(x:String)" />
    <x:Property Name="out_ShareCost" Type="OutArgument(x:String)" />
    <x:Property Name="out_EffectiveDate" Type="OutArgument(x:String)" />
    <x:Property Name="LogFilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_GainLossType" Type="InArgument(x:String)" />
    <x:Property Name="in_MailRecievedDate" Type="InArgument(x:String)" />
    <x:Property Name="out_RenameDateFormat" Type="OutArgument(x:String)" />
    <x:Property Name="in_MailItem" Type="InArgument(snm:MailMessage)" />
  </x:Members>
  <this:Stock_Distribution.in_FundName>
    <InArgument x:TypeArguments="x:String" />
  </this:Stock_Distribution.in_FundName>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410.4,964.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Stock_Distribution_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Stock_Distribution" sap:VirtualizedContainerService.HintSize="757.6,1100" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:String[]" Name="SDLOGS" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">280,32.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">310,107.7 310,137.7 360,137.7 360,156.4</av:PointCollection>
        <x:Double x:Key="Height">1063.1999999999998</x:Double>
        <x:Double x:Key="Width">724.0000000000001</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID30</x:Reference>
    </Flowchart.StartNode>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">380,43.60000000000001</av:Point>
          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Stock Distribution" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <TryCatch.Variables>
          <Variable x:TypeArguments="x:String" Name="returnofprincipal" />
          <Variable x:TypeArguments="s:String[]" Name="returnofprincipalSplit" />
          <Variable x:TypeArguments="x:String" Name="EntityName" />
          <Variable x:TypeArguments="x:String" Name="gainLoss" />
          <Variable x:TypeArguments="x:String" Name="gainLossType" />
        </TryCatch.Variables>
        <TryCatch.Try>
          <Flowchart sap:VirtualizedContainerService.HintSize="785.6,1694.4" sap2010:WorkflowViewState.IdRef="Flowchart_3">
            <Flowchart.Variables>
              <Variable x:TypeArguments="s:String[]" Name="sharesplit" />
              <Variable x:TypeArguments="x:String" Name="shares" />
              <Variable x:TypeArguments="x:String" Name="distributiondate" />
              <Variable x:TypeArguments="x:String" Name="investmentdate" />
              <Variable x:TypeArguments="x:String" Name="priceondistribution" />
              <Variable x:TypeArguments="x:String" Name="sharecost" />
              <Variable x:TypeArguments="str:MatchCollection" Name="Datefilematch" />
              <Variable x:TypeArguments="x:String" Name="sharematch" />
              <Variable x:TypeArguments="x:String" Name="reducespace" />
              <Variable x:TypeArguments="x:String" Name="stockDistributionlocalsplit1" />
              <Variable x:TypeArguments="x:String" Name="sharecost1" />
              <Variable x:TypeArguments="x:String" Name="investmentdatesplit" />
              <Variable x:TypeArguments="x:String" Name="securityDescription" />
            </Flowchart.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                <x:Double x:Key="Height">1658</x:Double>
                <av:PointCollection x:Key="ConnectorLocation">330,40 570,40 570,136.5</av:PointCollection>
                <x:Double x:Key="Width">752</x:Double>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID18</x:Reference>
            </Flowchart.StartNode>
            <FlowDecision x:Name="__ReferenceID18" Condition="[partenshipname.ToLower.Contains(&quot;khosla&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">530.5,136.5</av:Point>
                  <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                  <av:PointCollection x:Key="FalseConnector">609.5,180 660,180 660,296.5</av:PointCollection>
                  <av:PointCollection x:Key="TrueConnector">530.5,180.1 500.5,180.1 500.5,173.4 310,173.4</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">110,147</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">110,173.4 0,173.4 0,1240 268.895,1240 268.895,1270</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Khosala_TryCatch" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                    <TryCatch.Try>
                      <Sequence DisplayName="Khosla" sap:VirtualizedContainerService.HintSize="609.6,1398.4" sap2010:WorkflowViewState.IdRef="Sequence_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[segfilepdf.ToLower.Contains(&quot;your allocation of shares is as follows&quot;)]" sap:VirtualizedContainerService.HintSize="547.2,1286.4" sap2010:WorkflowViewState.IdRef="If_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="510.4,1692" sap2010:WorkflowViewState.IdRef="Sequence_29">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_82">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(\#\s*of\s*shares\s*(.+))").Groups(2).Value.Split(" "c)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_83">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(distributing\s*(.+)\s*shares)").Groups(2).Value.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_191">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"NYSE\s*Symbol\s*(.+)\)").Groups(1).Value.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_192">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(distributing\s*(.+)\s*shares\s*of\s*(.+)\()").Groups(3).Value.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_84">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[stockDistributionlocalsplit1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(segfilepdf,"\r\n","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_194">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sharecost1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(Confidential(.+)In\s*accordance)").Groups(2).Value.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[String.IsNullOrEmpty(sharecost1)]" sap:VirtualizedContainerService.HintSize="467.2,264.8" sap2010:WorkflowViewState.IdRef="If_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_195">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[sharecost1]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(Purchase\s*Date(.+)In\s*accordance)").Groups(2).Value.Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_53" />
                                </If.Else>
                              </If>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_196">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(sharecost1,"(\d{1,2}\/\d{1,2}\/\d{2,4})").value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_197">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(sharecost1,"(\$\S+\s*(\d+))").Groups(2).value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_198">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["$"+System.Text.RegularExpressions.Regex.Match(sharecost1,"(\$(\S+)\s*\d+)").Groups(2).value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_89">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(ending\s*(.+)\.\s*A\s*notice)").Groups(2).Value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_90">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(distributiondate).ToString("MM/dd/yyyy")]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="513.6,1103.2" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="470.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_91">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="470.4,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_92">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(confidential(\r\n)?(.+)\Wshare)").Groups(3).Value.Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="470.4,312.8" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                                <TryCatch.Try>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_98">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(private @ cmcapitaladvisors.com(\r\n)?(.+)\.)").Groups(3).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="436.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_172">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(common\s*stock\s*of(.*)\s*private\s*@\s*cmcapitaladvisors.com)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <Assign sap:VirtualizedContainerService.HintSize="470.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_99">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(common\s*stock\s*of(.+)\.)").Groups(2).Value.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="470.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_93">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(distributed\s*(.+)\s*shares)").Groups(2).Value.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="470.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_94">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(ending\s*(.+))").Groups(2).Value.Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="470.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_95">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(distributiondate).ToString("MM/dd/yyyy")]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1193.33333333333,22" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID0">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">168.895,1270</av:Point>
                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">368.895,1297 386,1297 386,1390</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                        <TryCatch.Try>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[shares.Replace(",","")]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">169,1390</av:Point>
                              <av:Size x:Key="ShapeSize">433.6,80.8</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">385.8,1471.6 300,1471.6 300,1500</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_35">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">[SDLOGS]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">[{"",accno.ToString,crntidentfier.ToString,foldervariable.ToString,partenshipname.ToString,distributiondate,"",investmentdate,gainLossType,EntityName,securityDescription,shares,priceondistribution,returnofprincipal,gainLoss,sharecost}]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">200,1500</av:Point>
                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">400,1527 386,1527 386,1572</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[SDLOGS]" DataTable="[SDdt]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:AddDataRow>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">169,1572</av:Point>
                                      <av:Size x:Key="ShapeSize">433.6,80.8</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_36">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:String[]">[SDLOGS]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:String[]">[{}]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowDecision x:Name="__ReferenceID2" Condition="[partenshipname.ToLower.Contains(&quot;tcv&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">620.5,296.5</av:Point>
                      <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                      <av:PointCollection x:Key="FalseConnector">699.5,340 720,340 720,436.5 630,436.5 630,466.5</av:PointCollection>
                      <av:PointCollection x:Key="TrueConnector">620.5,340.1 590.5,340.1 590.5,333.4 310,333.4</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">110,307</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">210,359.8 210,389.8 225.8,389.8 225.8,1150</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch DisplayName="TCV_TryCatch" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                        <TryCatch.Try>
                          <Sequence DisplayName="TCV" sap:VirtualizedContainerService.HintSize="572.8,1975.2" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_37">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[sharematch]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(you\s*will\s*receive\s*a\s*total\s*of(.+)shares)").Groups(2).Value.Trim]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[sharematch]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_39">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[reducespace]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(segfilepdf,"\r\n","")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_42">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(distribution\s*is\s*valued\s*at\s*(.+)per\s*share)").Groups(2).Value.Trim]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_44">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_103">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(distribution\s*of\s*(.+)\s*shares\s*of(.+))").Groups(3).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_104">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(distribution\s*of\s*(.+)\s*shares\s*of(.+))").Groups(3).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[reducespace.ToLower.Contains(&quot;Acquisition Cost per Number&quot;)]" sap:VirtualizedContainerService.HintSize="510.4,1012" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="476.8,414.4" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_113">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(reducespace.ToLower,"(acquisition\s*cost\s*per\s*number(.+)\s*please\s*note)").Groups(2).Value.Split(" "c)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_114">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[sharesplit(9).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_115">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[sharesplit(8).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="476.8,414.4" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_116">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(reducespace.ToLower,"(acquisition\s*average\s*cost\s*per\s*number(.+)\s*please\s*note)").Groups(2).Value.Split(" "c)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_117">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[sharesplit.Reverse().ToArray(5).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_118">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[sharesplit.Reverse().ToArray(6).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="576,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">9,1150</av:Point>
                              <av:Size x:Key="ShapeSize">433.6,80.8</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">226,1231 226,1261 138.89499999999998,1261 138.89499999999998,1296 168.895,1296</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_34">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(dateabb).ToString("MM/dd/yyyy")]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowDecision x:Name="__ReferenceID3" Condition="[partenshipname.ToLower.Contains(&quot;sequoia&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">590.5,466.5</av:Point>
                          <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                          <av:PointCollection x:Key="TrueConnector">590.5,510.1 560.5,510.1 560.5,503.4 540.5,503.4</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">669.5,510 699.5,510 699.5,566.5 640,566.5 640,596.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">340.5,477</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">340.5,503.4 0,503.4 0,1240 268.895,1240 268.895,1270</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Sequioa_TryCatch" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                            <TryCatch.Try>
                              <Sequence DisplayName="SequioaSD" sap:VirtualizedContainerService.HintSize="496,1458.4" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_151">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[stockDistributionlocalsplit1]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[segfilepdf.Substring(segfilepdf.IndexOf("Details of the distribution"),segfilepdf.LastIndexOf("Shares Distributed for Entire")-segfilepdf.IndexOf("Details of the distribution")).ToLower.Replace("cmc master fund, l.p. shares","")]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_152">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(shares(.*))").Groups(2).Value.Trim.Replace("*","")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_153">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(distribution date(.*))").Groups(2).Value.Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_154">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(distribution price(.*))").Groups(2).Value.Trim.Split(" "c)(0)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_155">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[investmentdatesplit]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(acquisition date(.*))").Groups(2).Value.Trim()]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_156">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[returnofprincipalSplit]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Acquisition\s*Cost\W+\s*(.+))").Groups(2).Value.Trim.Split(" "c)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_157">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[returnofprincipal]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[returnofprincipalSplit.Reverse().ToArray(0)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_193">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[stockDistributionlocalsplit1]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(segfilepdf,"\r\n","")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <If Condition="[segfilepdf.ToLower.Contains(&quot;holdings in&quot;)]" DisplayName="Entity name" sap:VirtualizedContainerService.HintSize="652,412" sap2010:WorkflowViewState.IdRef="If_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_158">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(holdings\s*in\s*(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_159">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(holdings\s*in\s*(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_160">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(distribution\s*of(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_161">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(distribution\s*of(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="655.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_163">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[gainLoss]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Distribution\s*Gain\s*(.+))").Groups(2).Value.Trim]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[investmentdatesplit.Contains(&quot; &quot;c)]" DisplayName="If investment date" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_15">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="526,400" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_164">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[investmentdatesplit.Split(" "c).Reverse().ToArray(0)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[investmentdate.Contains(&quot;-&quot;)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_14">
                                        <If.Then>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_165">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[investmentdate.Split("-"c).Reverse().ToArray(0)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_166">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[investmentdatesplit]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_167">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[sharecost1]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(acquisition price(.*))").Groups(2).Value.Trim.Split(" "c).Reverse().ToArray(0)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[sharecost1.Contains(&quot; &quot;c)]" DisplayName="If share cost" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="If_16">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_168">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[sharecost1.Split(" "c)(0).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_169">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[sharecost1.Trim]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowDecision x:Name="__ReferenceID5" Condition="[partenshipname.ToLower.Contains(&quot;shasta&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">600.5,596.5</av:Point>
                              <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                              <av:PointCollection x:Key="TrueConnector">600.5,639.833333333333 570.5,639.833333333333 570.5,634 550.5,634</av:PointCollection>
                              <av:PointCollection x:Key="FalseConnector">679.5,640 700,640 700,706.5 640,706.5 640,736.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">350.5,607</av:Point>
                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">450.5,659.8 450.5,689.8 322.6,689.8 322.6,1120 472.6,1120 472.6,1190.8 442.6,1190.8</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch DisplayName="Shasat_TryCatch" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                <TryCatch.Try>
                                  <Sequence DisplayName="Shasta" sap:VirtualizedContainerService.HintSize="496,680" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_55">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[segfilepdf.Split({"total of","shares in"},stringsplitoptions.None)(1)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_56">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[(segfilepdf.Split({"distribution price","which represents"},stringsplitoptions.None)(1).Split(" "c).Reverse().ToArray)(1).ToString.Replace(",","")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_57">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[(segfilepdf.Split({"average purchase price","per share"},stringsplitoptions.None)(1).Split(" "c).Reverse().ToArray)(1)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_105">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Distribution\s*of(.+)Common\s*Stock)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_106">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Distribution\s*of(.+)Common\s*Stock)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <FlowStep.Next>
                                <x:Reference>__ReferenceID1</x:Reference>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID13" Condition="[partenshipname.ToLower.Contains(&quot;ivp&quot;) or partenshipname.ToLower.Contains(&quot;institutional venture partners&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">600.5,736.5</av:Point>
                                  <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">600.5,779.833333333333 570.5,779.833333333333 570.5,774 550.5,774</av:PointCollection>
                                  <av:PointCollection x:Key="FalseConnector">679.5,780 709.5,780 709.5,846.5 650,846.5 650,876.5</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">350.5,747</av:Point>
                                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">350.5,773.4 0,773.4 0,1190.8 9,1190.8</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="IVP_TryCatch" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="IVP" sap:VirtualizedContainerService.HintSize="572.8,2142.4" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[item]" sap:VirtualizedContainerService.HintSize="510.4,83.2" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[segfilepdf]" />
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_139">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sharematch]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(you\s*will\s*receive\s*a\s*total\s*of(.+)shares)").Groups(2).Value.Trim]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_140">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[sharematch]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <If Condition="[String.IsNullOrEmpty(shares)]" sap:VirtualizedContainerService.HintSize="510.4,581.6" sap2010:WorkflowViewState.IdRef="If_11">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476.8,398.4" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_141">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[stockDistributionlocalsplit1]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[segfilepdf.Substring(segfilepdf.IndexOf("Limited Partners"),segfilepdf.LastIndexOf("IVP CONFIDENTIAL / TRADE SECRET / DO NOT COPY")-segfilepdf.IndexOf("Limited Partners"))]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="433.6,187.2" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <TryCatch.Try>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="496,444" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_199">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sharematch]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(004(.+))").Groups(2).Value.Trim]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_200">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[sharematch]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[system.Text.RegularExpressions.Regex.Replace(sharematch,"\s{1,}","#")]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_201">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[sharematch.Split("#"c)(2)]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_143">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(stockDistributionlocalsplit1,"(004(.+))").Groups(2).Value.Trim.Split(" "c).Reverse().ToArray(2)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_54" />
                                          </If.Else>
                                        </If>
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_144">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Stock\s*Acquisition\s*Price:\s*(.*))").Groups(2).Value.Trim]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_145">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(distribution\s*price:\s*(.*))").Groups(2).Value.Trim]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_146">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Stock\s*Acquisition\s*Date:\s*(.*))").Groups(2).Value.Trim]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="510.4,312.8" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch.Try>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_147">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(investmentdate).ToString("MM/dd/yyyy")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="436.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_148">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_202">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(.+)\s*Stock\s*Distribution\s*Information").Groups(1).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_203">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(.+)\s*Stock\s*Distribution\s*Information").Groups(1).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="576,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID1</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowDecision x:Name="__ReferenceID14" Condition="[partenshipname.ToLower.Contains(&quot;venrock&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <av:Point x:Key="ShapeLocation">610.5,876.5</av:Point>
                                      <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                                      <av:PointCollection x:Key="TrueConnector">610.5,919.833333333333 580.5,919.833333333333 580.5,914 550.5,914</av:PointCollection>
                                      <av:PointCollection x:Key="FalseConnector">689.7,920.1 709.7,920.1 709.7,986.5 649.7,986.5 649.7,1016.5</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <FlowDecision.True>
                                    <FlowStep x:Name="__ReferenceID15">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">350.5,887</av:Point>
                                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">450.5,939.8 450.5,969.8 322.6,969.8 322.6,1120 472.6,1120 472.6,1190.8 442.6,1190.8</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch DisplayName="Venrock_TryCatch" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                        <TryCatch.Try>
                                          <Sequence DisplayName="Venrock" sap:VirtualizedContainerService.HintSize="496,1531.2" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_66">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Shares\s*Distributed\s*(.*))").Groups(2).Value.Trim.Split(" "c)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_67">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[sharesplit(0)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_68">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Cost\s*per\s*Share\s*(.*))").Groups(2).Value.Trim.Split(" "c)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_69">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[sharesplit(0)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_70">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Value\s*per\s*Share\s*(.*))").Groups(2).Value.Trim.Split(" "c)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_71">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[sharesplit(0)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_72">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Purchase\s*Date\s*(.*))").Groups(2).Value.Trim.Split(" "c)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_73">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[sharesplit(0)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_74">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(investmentdate).ToString("yyyy.MM.dd")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_75">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[distributiondate]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_111">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Your\s*Distribution\s*Summary:\s*\r\n(.+)Your\s*Limited\s*Partner)").Groups(2).Value.Trim]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_112">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[gainLossType]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Deemed\s*(.+)Capital\s*Gain)").Groups(2).Value.Trim]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <FlowStep.Next>
                                        <x:Reference>__ReferenceID1</x:Reference>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowDecision.True>
                                  <FlowDecision.False>
                                    <FlowDecision x:Name="__ReferenceID16" Condition="[partenshipname.ToLower.Contains(&quot;Associated Funds&quot;.ToLower)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <av:Point x:Key="ShapeLocation">610.5,1016.5</av:Point>
                                          <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                                          <av:PointCollection x:Key="TrueConnector">610.5,1059.83333333333 580.5,1059.83333333333 580.5,1064 550.5,1064</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <FlowDecision.True>
                                        <FlowStep x:Name="__ReferenceID17">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:Point x:Key="ShapeLocation">350.5,1037</av:Point>
                                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                                              <av:PointCollection x:Key="ConnectorLocation">450.5,1089.8 450.5,1190.8 442.6,1190.8</av:PointCollection>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch DisplayName="Associated Funds" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                            <TryCatch.Try>
                                              <Sequence DisplayName="Associated Funds" sap:VirtualizedContainerService.HintSize="496,801.6" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_185">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[shares]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(holdings\s*of\s*(.+)\s+shares)").Groups(2).Value.Trim]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_186">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[investmentdate]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(date\s*acquired(.+)\n(.+))").Groups(3).Value.Trim.Split(" "c)(0)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_187">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[priceondistribution]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                    </InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_188">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[sharecost]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf.ToLower,"(date\s*acquired(.+)\n(.+))").Groups(3).Value.Trim.Split(" "c)(1)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_189">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[EntityName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Stock\s*Distribution\W?\s*\n(.+))").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString.Trim]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_190">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[securityDescription]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(segfilepdf,"(Stock\s*Distribution\W?\s*\n(.+))").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="499.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <FlowStep.Next>
                                            <x:Reference>__ReferenceID1</x:Reference>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowDecision.True>
                                    </FlowDecision>
                                  </FlowDecision.False>
                                </FlowDecision>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowDecision.False>
            </FlowDecision>
            <x:Reference>__ReferenceID2</x:Reference>
            <x:Reference>__ReferenceID3</x:Reference>
            <x:Reference>__ReferenceID4</x:Reference>
            <x:Reference>__ReferenceID5</x:Reference>
            <x:Reference>__ReferenceID6</x:Reference>
            <x:Reference>__ReferenceID7</x:Reference>
            <x:Reference>__ReferenceID8</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID9</x:Reference>
            <x:Reference>__ReferenceID10</x:Reference>
            <x:Reference>__ReferenceID11</x:Reference>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID12</x:Reference>
            <x:Reference>__ReferenceID13</x:Reference>
            <x:Reference>__ReferenceID14</x:Reference>
            <x:Reference>__ReferenceID15</x:Reference>
            <x:Reference>__ReferenceID16</x:Reference>
            <x:Reference>__ReferenceID17</x:Reference>
          </Flowchart>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="790,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </FlowStep>
    <FlowDecision x:Name="__ReferenceID19" Condition="[in_FundName.ToLower.Contains(&quot;ivp&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">320.4,436.4</av:Point>
          <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
          <av:PointCollection x:Key="TrueConnector">320.4,480 200,479.99999999999994</av:PointCollection>
          <av:PointCollection x:Key="FalseConnector">399.59999999999997,480 410,480 410,546.4 350,546.4 350,576.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowStep x:Name="__ReferenceID20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">0,453.59999999999997</av:Point>
              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="IVP" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_22">
            <TryCatch.Try>
              <Sequence DisplayName="IVP" sap:VirtualizedContainerService.HintSize="672.8,1501.6" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="FileDataReducedSpace" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="610.4,288.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(you\s*will\s*receive\s*a\s*total\s*of(.+)shares)").Groups(2).Value.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(distribution\s*price:\s*(.*))").Groups(2).Value.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Stock\s*Acquisition\s*Date:\s*(.*))").Groups(2).Value.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_ShareCost]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Stock\s*Acquisition\s*Price:\s*(.*))").Groups(2).Value.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_EntityName]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(.+)\s*Stock\s*Distribution\s*Information").Groups(1).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(.+)\s*Stock\s*Distribution\s*Information").Groups(1).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[out_EffectiveDate]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(stock\s*distribution\s*of.+(\d{1,2}(\/|\.)\d{1,2}(\/|\.)\d{4}|(\d{1,2}\s*(st|nd|rd|th)?\s+((jan|feb(r)?)(uary)?|mar(ch)?|apr(il)?|may?|(jun|jul)(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s+\d{4})|(((jan|feb(r)?)(uary)?|mar(ch)?|apr(il)?|may?|(jun|jul)(e|y)?|aug(ust)?|oct(ober)?|(sep(t)?|nov|dec)(ember)?)\s+\d{1,2}\s*(st|nd|rd|th)?\W\s*\d{4})|(\d{4}(\/|\.)\d{1,2}(\/|\.)\d{1,2})))").Groups(2).Value.Trim]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <If Condition="[String.IsNullOrEmpty(out_SharesNo)]" sap:VirtualizedContainerService.HintSize="610.4,1060.8" sap2010:WorkflowViewState.IdRef="If_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="576.8,877.6" sap2010:WorkflowViewState.IdRef="Sequence_68">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="533.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_215">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[FileDataReducedSpace]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_FileData.Substring(in_FileData.IndexOf("Limited Partners"),in_FileData.LastIndexOf("IVP CONFIDENTIAL / TRADE SECRET / DO NOT COPY")-in_FileData.IndexOf("Limited Partners"))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="533.6,666.4" sap2010:WorkflowViewState.IdRef="TryCatch_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,436.8" sap2010:WorkflowViewState.IdRef="Sequence_60">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="ShareNoString" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_216">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ShareNoString]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileDataReducedSpace,"(004(.+))").Groups(2).Value.Trim]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_217">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ShareNoString]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[system.Text.RegularExpressions.Regex.Replace(ShareNoString,"\s{1,}","#")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_218">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ShareNoString.Split("#"c)(2)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_219">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileDataReducedSpace,"(004(.+))").Groups(2).Value.Trim.Split(" "c).Reverse().ToArray(2)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_69">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="676,21" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </FlowStep>
      </FlowDecision.True>
      <FlowDecision.False>
        <FlowDecision x:Name="__ReferenceID24" Condition="[in_FundName.ToLower.Contains(&quot;shasta&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">310.4,576.4</av:Point>
              <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
              <av:PointCollection x:Key="TrueConnector">310.4,620 280.4,620 280.4,610 220,610</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">389.4,619.9 410,619.9 410,676.5 380,676.5 380,706.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID25">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">20,583.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Shasta" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_24">
                <TryCatch.Try>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,256" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"total\s*of\s*(.*)\sshares").Groups(1).Value.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"distribution\s*price\s*of\s*(.*)\swhich\s*represents").Groups(1).Value.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Stock\s*Acquisition\s*Date:\s*(.*))").Groups(2).Value.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_ShareCost]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"average\s*purchase\s*price\s*of\s*(.*)\sper\s*share").Groups(1).Value.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_EntityName]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Distribution\s*of(.+)Common\s*Stock)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Distribution\s*of(.+)Common\s*Stock)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="427,21" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowDecision x:Name="__ReferenceID27" Condition="[in_FundName.ToLower.Contains(&quot;tcv&quot;) or in_MailItem.Subject.ToLower.Contains(&quot;tcv&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">340.5,706.5</av:Point>
                  <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
                  <av:PointCollection x:Key="FalseConnector">419.7,750.1 444.9,750.1 444.9,806.5 414.9,806.5 414.9,836.5</av:PointCollection>
                  <av:PointCollection x:Key="TrueConnector">340.5,750 200,750</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,724</av:Point>
                      <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">210,359.8 210,389.8 225.8,389.8 225.8,1150</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="TCV_TryCatch" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_26">
                    <TryCatch.Try>
                      <Sequence DisplayName="TCV" sap:VirtualizedContainerService.HintSize="572.8,1853.6" sap2010:WorkflowViewState.IdRef="Sequence_82">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="reducespace" />
                          <Variable x:TypeArguments="s:String[]" Name="sharesplit" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_240">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(you\s*will\s*receive\s*a\s*total\s*of(.+)shares)").Groups(2).Value.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_242">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[reducespace]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_FileData,"\r\n","")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_243">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(distribution\s*is\s*valued\s*at\s*(.+)per\s*share)").Groups(2).Value.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_253">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(in_MailRecievedDate.ToString).ToString("dd.MM.yyyy")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_245">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_EntityName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(distribution\s*of\s*(.+)\s*shares\s*of(.+))").Groups(3).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_246">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(distribution\s*of\s*(.+)\s*shares\s*of(.+))").Groups(3).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[reducespace.ToLower.Contains(&quot;Acquisition Cost per Number&quot;)]" sap:VirtualizedContainerService.HintSize="510.4,1012" sap2010:WorkflowViewState.IdRef="If_26">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="476.8,414.4" sap2010:WorkflowViewState.IdRef="Sequence_80">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_247">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(reducespace.ToLower,"(acquisition\s*cost\s*per\s*number(.+)\s*please\s*note)").Groups(2).Value.Split(" "c)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_248">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_ShareCost]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[sharesplit(9).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_249">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[sharesplit(8).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="476.8,414.4" sap2010:WorkflowViewState.IdRef="Sequence_81">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_250">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(reducespace.ToLower,"(acquisition\s*average\s*cost\s*per\s*number(.+)\s*please\s*note)").Groups(2).Value.Split(" "c)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_251">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_ShareCost]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[sharesplit.Reverse().ToArray(5).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_252">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[sharesplit.Reverse().ToArray(6).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="576,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_26">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowDecision x:Name="__ReferenceID28" DisplayName="One Prime" sap:VirtualizedContainerService.HintSize="70.4,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_17">
                  <FlowDecision.Condition>
                    <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="in_FundName.ToLower.Contains(&quot;oneprime&quot;) or in_MailItem.Subject.ToLower.Contains(&quot;oneprime&quot;)" />
                  </FlowDecision.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">379.7,836.5</av:Point>
                      <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
                      <av:PointCollection x:Key="FalseConnector">709.5,350 730,350 730,446.5 640,446.5 640,476.5</av:PointCollection>
                      <av:PointCollection x:Key="TrueConnector">379.7,880.1 289.7,880.1</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID29">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">89.69999999999999,853.7</av:Point>
                          <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch DisplayName="One Prime" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_28">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="562.4,895.2" sap2010:WorkflowViewState.IdRef="Sequence_89">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[in_FileData.ToLower.Contains(&quot;your portion of the stock distribution&quot;)]" sap:VirtualizedContainerService.HintSize="500,783.2" sap2010:WorkflowViewState.IdRef="If_27">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="466.4,316" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423.2,226.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_57">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"commencement\s*of\s*trading\s*(.*))").Groups(1).Value.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_58">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(january|february|march|april|may|june|july|august|september|october|november|december)\s*\d{1,2}\W*\d{2,4}").Groups(1).Value.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_59">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(out_RenameDateFormat.ToString).ToString("dd.MM.yyyy")]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_EffectiveDate]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[out_RenameDateFormat]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_61">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"((?&lt;=stock\sdistribution\sis\s).*(?=roblox\sshares))").Groups(1).Value.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MultipleAssign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="466.4,284" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423.2,194.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_62">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"effective\s*(.*)").Groups(1).Value.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_63">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(out_RenameDateFormat.ToString).ToString("dd.MM.yyyy")]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_64">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_EffectiveDate]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[out_RenameDateFormat]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_65">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"roblox\s*shares\s*is\s*(.*)").Groups(1).Value.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MultipleAssign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="565.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_27">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </FlowStep>
                  </FlowDecision.True>
                </FlowDecision>
              </FlowDecision.False>
            </FlowDecision>
          </FlowDecision.False>
        </FlowDecision>
      </FlowDecision.False>
    </FlowDecision>
    <FlowDecision x:Name="__ReferenceID22" Condition="[in_FundName.ToLower.Contains(&quot;sequoia&quot;) or in_FundName.ToLower.Contains(&quot;hongshan&quot;) or in_FundName.ToLower.Contains(&quot;peak xv&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">310.4,286.4</av:Point>
          <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
          <av:PointCollection x:Key="FalseConnector">389.59999999999997,330 419.5999999999999,330 419.5999999999999,406.4 360,406.4 360,436.4</av:PointCollection>
          <av:PointCollection x:Key="TrueConnector">310.4,330 280.40000000000003,330 280.40000000000003,339.99999999999994 200,339.99999999999994</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowStep x:Name="__ReferenceID21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">0,313.59999999999997</av:Point>
              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Sequoia" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_20">
            <TryCatch.Try>
              <Sequence DisplayName="Squoia" sap:VirtualizedContainerService.HintSize="672,3172.8" sap2010:WorkflowViewState.IdRef="Sequence_61">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="sharesplit" />
                  <Variable x:TypeArguments="x:String" Name="ShareCostString" />
                  <Variable x:TypeArguments="x:String" Name="FileDataReducedSpace" />
                  <Variable x:TypeArguments="x:String" Name="InvestmentDateString" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="SequioaSD" sap:VirtualizedContainerService.HintSize="609.6,3060.8" sap2010:WorkflowViewState.IdRef="Sequence_70">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="investmentdatesplit" />
                    <Variable x:TypeArguments="x:String" Name="sharecost1" />
                    <Variable x:TypeArguments="x:String" Name="StockDistributionSplit" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="547.2,319.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Shares  ?(.*\b))").Groups(1).Value.Split(" "c)(1)]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Distribution\sDate(.*))").Groups(2).Value.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(out_RenameDateFormat.ToString).ToString("dd.MM.yyyy")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_EffectiveDate]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[out_RenameDateFormat]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Distribution\sPrice(.*))").Groups(2).Value.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[investmentdatesplit]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Acquisition\sDate(.*)\s*(.*))").Groups(3).Value.Trim()]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[out_ReturnOfPrincipal]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Acquisition\s*Cost\W+\s*(.+))").Groups(2).Value.Trim]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_52">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[StockDistributionSplit]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_FileData,"\r\n","")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="547.2,1000" sap2010:WorkflowViewState.IdRef="TryCatch_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <If Condition="[in_FileData.ToLower.Contains(&quot;holdings in&quot;)]" DisplayName="Entity name" sap:VirtualizedContainerService.HintSize="510.4,768.8" sap2010:WorkflowViewState.IdRef="If_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="476.8,292.8" sap2010:WorkflowViewState.IdRef="Sequence_74">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_229">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(StockDistributionSplit,"(holdings\s*in\s*(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_230">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_EntityName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(StockDistributionSplit,"(holdings\s*in\s*(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="476.8,292.8" sap2010:WorkflowViewState.IdRef="Sequence_75">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_231">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(StockDistributionSplit,"(distribution\s*of(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_232">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_EntityName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(StockDistributionSplit,"(distribution\s*of(.+)\s*from)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(0).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="513.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <Assign sap:VirtualizedContainerService.HintSize="547.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_233">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_GainLoss]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(Distribution\s*Gain\s*(.+))").Groups(2).Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[investmentdatesplit.Contains(&quot; &quot;c)]" DisplayName="If investment date" sap:VirtualizedContainerService.HintSize="547.2,740.8" sap2010:WorkflowViewState.IdRef="If_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="510.4,476" sap2010:WorkflowViewState.IdRef="Sequence_77">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="467.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_234">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[investmentdatesplit.Split(" "c).Reverse().ToArray(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[out_InvestmentDate.Contains(&quot;-&quot;)]" sap:VirtualizedContainerService.HintSize="467.2,264.8" sap2010:WorkflowViewState.IdRef="If_24">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_235">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[investmentdatesplit.Split("-"c).Reverse().ToArray(0)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_76" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_236">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[investmentdatesplit]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                  <Assign sap:VirtualizedContainerService.HintSize="547.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_237">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[sharecost1]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(acquisition price(.*))").Groups(2).Value.Trim.Split(" "c).Reverse().ToArray(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[sharecost1.Contains(&quot; &quot;c)]" DisplayName="If share cost" sap:VirtualizedContainerService.HintSize="547.2,525.6" sap2010:WorkflowViewState.IdRef="If_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_78">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_238">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ShareCost]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[sharecost1.Split(" "c)(0).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_79">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_239">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_ShareCost]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[sharecost1.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="675.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </FlowStep>
      </FlowDecision.True>
      <FlowDecision.False>
        <x:Reference>__ReferenceID19</x:Reference>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID21</x:Reference>
    <FlowDecision x:Name="__ReferenceID30" Condition="[in_FundName.ToLower.Contains(&quot;khosla&quot;)]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">320.4,156.4</av:Point>
          <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
          <av:PointCollection x:Key="FalseConnector">399.59999999999997,200 410,200 410,256.4 350,256.4 350,286.4</av:PointCollection>
          <av:PointCollection x:Key="TrueConnector">320.4,200 200,200</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowStep x:Name="__ReferenceID23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">0,173.6</av:Point>
              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Khosla" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_18">
            <TryCatch.Try>
              <Sequence DisplayName="Khosla" sap:VirtualizedContainerService.HintSize="609.6,1467.2" sap2010:WorkflowViewState.IdRef="Sequence_62">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="sharesplit" />
                  <Variable x:TypeArguments="x:String" Name="ShareCostString" />
                  <Variable x:TypeArguments="x:String" Name="FileDataReducedSpace" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_FileData.ToLower.Contains(&quot;your allocation of shares is as follows&quot;)]" sap:VirtualizedContainerService.HintSize="547.2,1355.2" sap2010:WorkflowViewState.IdRef="If_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="466.4,503.2" sap2010:WorkflowViewState.IdRef="Sequence_63">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423.2,413.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="s:String[]">[sharesplit]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(\#\s*of\s*shares\s*(.+))").Groups(2).Value.Split(" "c)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(distributing\s*(.+)\s*shares)").Groups(2).Value.Trim]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"((NYSE|NASDAQ)\s*Symbol\s*\W([A-Za-z]+)\W)").Groups(3).Value.Trim]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[FileDataReducedSpace]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_FileData,"\r\n","")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[ShareCostString]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileDataReducedSpace,"(Confidential(.+)In\s*accordance)").Groups(2).Value.Trim]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[ShareCostString]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(String.IsNullOrEmpty(ShareCostString),System.Text.RegularExpressions.Regex.Match(FileDataReducedSpace,"(Purchase\s*Date(.+)In\s*accordance)").Groups(2).Value.Trim, ShareCostString)]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_InvestmentDate]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ShareCostString,"(\d{1,2}\/\d{1,2}\/\d{2,4})").value]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(ShareCostString,"(\$\S+\s*(\d+))").Groups(2).value]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_ShareCost]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">["$"+System.Text.RegularExpressions.Regex.Match(ShareCostString,"(\$(\S+)\s*\d+)").Groups(2).value]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(FileDataReducedSpace,"(ending\s*(.+)\.\s*A\s*notice)").Groups(2).Value]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(out_RenameDateFormat).ToString("yyyy.MM.dd")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="513.6,668.8" sap2010:WorkflowViewState.IdRef="Sequence_64">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="470.4,226.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_PriceOnDistribution]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData.ToLower,"(distributed\s*(.+)\s*shares)").Groups(2).Value.Trim]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_EntityName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(common\s*stock\s*of(.+)\.)").Groups(2).Value.Trim]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_SharesNo]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(ending\s*(.+))").Groups(2).Value.Trim]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[out_RenameDateFormat]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(out_RenameDateFormat).ToString("yyyy.MM.dd")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <TryCatch DisplayName="Security Description" sap:VirtualizedContainerService.HintSize="470.4,312.8" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_204">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(private @ cmcapitaladvisors.com(\r\n)?(.+)\.)").Groups(3).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="436.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_205">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_SecurityDescription]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(in_FileData,"(common\s*stock\s*of(.*)\s*private\s*@\s*cmcapitaladvisors.com)").Groups(2).Value.Trim.Split({"(",")"},StringSplitOptions.None)(1).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="612.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </FlowStep>
      </FlowDecision.True>
      <FlowDecision.False>
        <x:Reference>__ReferenceID22</x:Reference>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID23</x:Reference>
    <x:Reference>__ReferenceID24</x:Reference>
    <x:Reference>__ReferenceID25</x:Reference>
    <x:Reference>__ReferenceID26</x:Reference>
    <x:Reference>__ReferenceID27</x:Reference>
    <x:Reference>__ReferenceID28</x:Reference>
    <x:Reference>__ReferenceID29</x:Reference>
  </Flowchart>
</Activity>